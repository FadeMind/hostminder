#!/bin/bash
# Copyright (c) 2021 Jereme Hancock <support@ubuntuce.com>

# MIT License

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

APP_TITLE="Host Minder"

check_status() {
  HOSTS=$(head /etc/hosts | grep "GENERATED BY $APP_TITLE" | awk '{print $0}')
  STEVEN=$(head /etc/hosts | grep "Title: StevenBlack/hosts" | awk '{print $0}')
  if [[ $HOSTS == "# GENERATED BY $APP_TITLE"* ]] || [[ $STEVEN == "# Title: StevenBlack/hosts"* ]]; then
    echo "ON"
  else
    echo "OFF"
  fi
}

get_toggle() {
  STATUS=$(check_status)
  if [[ $STATUS == *"ON"* ]]; then
    echo "OFF"
  else
    echo "ON"
  fi
}

get_status_color() {
  STATUS=$(check_status)
  if [[ $STATUS == *"ON"* ]]; then
    echo "#228B22"
  else
    echo "#CC0000"
  fi
}

get_level() {
  LEVEL=$(head /etc/hosts | grep "GENERATED BY $APP_TITLE" | awk '{print $6}')
  if [[ $LEVEL ]]; then
    echo "\n\nCurrent Protection Level: <b>$LEVEL</b>"
  fi
}

get_total_domains() {
  DOMAINS=$(head /etc/hosts | grep "# Number of unique domains" | awk '{print $6}')
  if [[ $DOMAINS ]]; then
    echo "\n\nTotal Unique Domains: <b>$DOMAINS</b>"
  fi
}

check_safe_searchstatus() {
  STATUS=$(tail /etc/hosts | grep "216.239.38.120     www.google.com     #forcesafesearch" | awk '{print $0}')
  if [[ $STATUS == "216.239.38.120     www.google.com     #forcesafesearch" ]]; then
    echo "ENABLED"
  else
    echo "DISABLED"
  fi
}

get_safe_searchstatus_color() {
  STATUS=$(check_safe_searchstatus)
  if [[ $STATUS == *"ENABLED"* ]]; then
    echo "#228B22"
  else
    echo "#CC0000"
  fi
}

settings() {
  STATUS=$(check_status)
  STATUS_COLOR=$(get_status_color)
  TOGGLE=$(get_toggle)
  LEVEL=$(get_level)
  DOMAINS=$(get_total_domains)
  SAFESEARCH_STATUS=$(check_safe_searchstatus)
  SAFESEARCH_STATUS_COLOR=$(get_safe_searchstatus_color)
  if [[ $STATUS == "ON" ]]; then
    UPDATE="Change/Update Protection Level"
    HELP="What's Host Minder?"
  else
    UPDATE="What's Host Minder?"
    HELP=""
  fi
  SWITCH=$(zenity --window-icon=/usr/share/pixmaps/hostminder.png --list --title="$APP_TITLE: Settings" --width=400 --height=275 --text="Status: <span color='$STATUS_COLOR'><b>$STATUS</b></span>$LEVEL$DOMAINS\n\nGoogle Safe Search: <span color='$SAFESEARCH_STATUS_COLOR'><b>$SAFESEARCH_STATUS</b></span>\n" --column= --hide-header "Turn $TOGGLE" "$UPDATE" "$HELP")
  case $SWITCH in

  "Turn ON")
    select_level fresh
    ;;

  "Turn OFF")
    revert_hosts
    ;;

  "Change/Update Protection Level")
    select_level
    ;;

  "What's Host Minder?")
    xdg-open "https://github.com/mhancoc7/hostminder#readme"
    settings
    ;;

  *)
    exit 1
    ;;
  esac
}

select_level() {
  if [[ $1 == "fresh" ]]; then
    zenity --window-icon=/usr/share/pixmaps/hostminder.png --info --title "$APP_TITLE" --width=450 --text $"<big>This tool will download and setup a new /etc/hosts file.\n\nIt will be making changes to your system and should be USED AT YOUR OWN RISK!\n\nIt is recommended that you have system backups.</big>"
  fi
  STATUS=$(check_status)
  STATUS_COLOR=$(get_status_color)
  LEVEL=$(get_level)
  DOMAINS=$(get_total_domains)
  SAFESEARCH_STATUS=$(check_safe_searchstatus)
  SAFESEARCH_STATUS_COLOR=$(get_safe_searchstatus_color)
  SELECT=$(zenity --window-icon=/usr/share/pixmaps/hostminder.png --list --title="$APP_TITLE: Settings" --width=400 --height=350 --text="Status: <span color='$STATUS_COLOR'><b>$STATUS</b></span>$LEVEL$DOMAINS\n\nGoogle Safe Search: <span color='$SAFESEARCH_STATUS_COLOR'><b>$SAFESEARCH_STATUS</b></span>\n\nSelect Protection Level" --column=Name --column=Description Max "Ads / Porn / Gambling / Social / Fake News" High "Ads / Porn / Gambling / Social" Medium "Ads / Porn / Gambling" Low "Ads / Porn")
  case $SELECT in

  "Max")
    update_hosts max
    ;;

  "High")
    update_hosts high
    ;;

  "Medium")
    update_hosts medium
    ;;

  "Low")
    update_hosts low
    ;;

  *)
    settings
    ;;
  esac

}

confirm() {
  if
    zenity --window-icon=/usr/share/pixmaps/hostminder.png --question --title "$APP_TITLE" --no-wrap --text="Are you sure?"
  then
    return
  else
    settings
  fi
}

general_failure() {
  zenity --window-icon=/usr/share/pixmaps/hostminder.png --error --title "$APP_TITLE" --no-wrap --text="Something went wrong!"
}

wget_failure() {
  zenity --window-icon=/usr/share/pixmaps/hostminder.png --error --title "$APP_TITLE" --no-wrap --text="Could not download hosts file.\n\nPlease check your internet connection!"
}

FALLBACK="127.0.0.1 localhost
127.0.0.1 localhost.localdomain
127.0.0.1 local
255.255.255.255 broadcasthost
::1 localhost
::1 ip6-localhost
::1 ip6-loopback
fe80::1%lo0 localhost
ff00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
ff02::3 ip6-allhosts
0.0.0.0 0.0.0.0
"

update_hosts() {
  confirm
  if [[ $1 == "max" ]]; then
    list="https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews-gambling-porn-social/hosts"
  elif [[ $1 == "high" ]]; then
    list="https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/gambling-porn-social/hosts"
  elif [[ $1 == "medium" ]]; then
    list="https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/gambling-porn/hosts"
  elif [[ $1 == "low" ]]; then
    list="https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/porn/hosts"
  else
    list="https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/porn/hosts"
  fi
  (
    echo "# Getting new hosts file. (${1^})\n"
    sleep 2
    if wget -q "$list" -O /tmp/bad.host.list.hostminder.txt; then
      sleep 2
      pkexec bash -c "
      if grep -q 'GENERATED BY $APP_TITLE' /etc/hosts; then
        echo '# Extracting custom entries.\n';
        sleep 2;
        sed -n '/# Custom host records are listed here./I,/# End of custom host records./I{ /# /Id; p }' /etc/hosts > /etc/hosts_hostminder_bak;
      else
        echo '# Backing up current hosts file.\n';
        sleep 2;
        cp /etc/hosts /etc/hosts_hostminder_bak;
      fi;

      sed -i '/^[[:space:]]*$/d' /etc/hosts_hostminder_bak;

      echo '# Setting up new hosts file.\n';
      sleep 2;
      if [ -f /tmp/bad.host.list.hostminder.txt ]; then
        sleep 1;
        sed -i '1i# GENERATED BY $APP_TITLE (${1^}): PLEASE DO NOT EDIT OR REMOVE THIS LINE' /tmp/bad.host.list.hostminder.txt;
        cp /tmp/bad.host.list.hostminder.txt /etc/hosts;

        echo '# Adding current hosts entries to new hosts file.\n';
        sleep 2;
        sed -i -e '/# Custom host records are listed here./r /etc/hosts_hostminder_bak' /etc/hosts;
        
        echo '# Enabling Google Safe Search';
        echo '# Google Safe Search' >> /etc/hosts;
        echo '216.239.38.120     www.google.com     #forcesafesearch' >> /etc/hosts;

        if ! grep -q '[^[:space:]]' /etc/hosts; then
          echo '# Something went wrong! Reverting to fallback hosts file.\n';
          sleep 2;
          echo '$FALLBACK' | tee /etc/hosts;
        fi;

        echo '# Cleaning up.\n';
        sleep 2;
        rm /etc/hosts_hostminder_bak;
        rm /tmp/bad.host.list.hostminder.txt;

        echo '# Restarting Network.\n';
        sleep 2;
        systemctl restart network.service;
        service network-manager restart;
        systemctl restart NetworkManager.service;
        systemctl restart wicd.service;
        /etc/init.d/dns-clean start;
        /etc/init.d/network restart;
        service nscd restart;
      fi
    "

      # =================================================================
      echo "# All finished.\n"
      sleep 2
    else
      wget_failure
    fi

  ) |
    zenity --progress \
      --title="$APP_TITLE: Progress" \
      --width=400 \
      --height=100 \
      --percentage=0 \
      --auto-close \
      --auto-kill \
      --no-cancel \
      --pulsate \
      --window-icon=/usr/share/pixmaps/hostminder.png

  (($? != 0)) && general_failure

  settings
}

revert_hosts() {
  confirm
  (
    # =================================================================
    echo "# Reverting to original hosts file.\n"
    sleep 2
    pkexec bash -c "
      if grep -q 'GENERATED BY $APP_TITLE' /etc/hosts; then
        echo '# Extracting custom entries.\n';
        sleep 2;
        sed -n '/# Custom host records are listed here./I,/# End of custom host records./I{ /# /Id; p }' /etc/hosts > /etc/hosts_hostminder_bak;
      else
        echo '# Backing up current hosts file.\n';
        sleep 2;
        cp /etc/hosts /etc/hosts_hostminder_bak;
      fi;
      sed -i '/^[[:space:]]*$/d' /etc/hosts_hostminder_bak;
      cp /etc/hosts_hostminder_bak /etc/hosts;

      if ! grep -q '[^[:space:]]' /etc/hosts; then
        echo '# Something went wrong! Reverting to fallback hosts file.\n';
        sleep 2;
        echo '$FALLBACK' | tee /etc/hosts;
      fi;

      echo '# Cleaning up.\n';
      sleep 2;
      rm /etc/hosts_hostminder_bak;
      rm /tmp/bad.host.list.hostminder.txt;

      echo '# Restarting Network.\n';
      sleep 2;
      systemctl restart network.service;
      service network-manager restart;
      systemctl restart NetworkManager.service;
      systemctl restart wicd.service;
      /etc/init.d/dns-clean start;
      /etc/init.d/network restart;
      service nscd restart;
    "

    # =================================================================
    echo "# All finished.\n"
    sleep 2

  ) |
    zenity --progress \
      --title="$APP_TITLE: Progress" \
      --width=400 \
      --height=100 \
      --percentage=0 \
      --auto-close \
      --auto-kill \
      --no-cancel \
      --pulsate \
      --window-icon=/usr/share/pixmaps/hostminder.png

  (($? != 0)) && zenity --window-icon=/usr/share/pixmaps/hostminder.png --error --text="Error in zenity command."

  settings
}

settings fresh
